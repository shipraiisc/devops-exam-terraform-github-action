name: Terraform Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action to run (apply or destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Deploy Terraform to AWS
    runs-on: ubuntu-latest

    env:
      AWS_ROLE_ARN: arn:aws:iam::594755788899:role/terraform-execution-role
      AWS_REGION: ca-central-1
      TF_IN_AUTOMATION: true

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials via OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0  # or your preferred version

      # Step 4: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 5: Validate Terraform
      - name: Terraform Validate
        run: terraform validate

      # Step 6: Plan Terraform changes
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Step 7: Apply or Destroy based on input
      - name: Terraform Apply or Destroy
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.action }}" == "destroy" ]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve tfplan
          fi
